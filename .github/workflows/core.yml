name: core

on:
  push:
    paths-ignore:
      - ".github/workflows/docs.yml"
      - "docs/**"
  pull_request:
    paths-ignore:
      - ".github/workflows/docs.yml"
      - "docs/**"

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            bundle: nsis
          - os: macos-latest
            target: aarch64-apple-darwin
            bundle: dmg
          - os: macos-latest
            target: x86_64-apple-darwin
            bundle: dmg
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bundle: AppImage
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Nightly Rust Toolchain
        run: rustup update nightly
      - name: Install Rust Target
        run: rustup target add --toolchain nightly ${{matrix.target}}
      - name: Install Rust Toolchain Component
        run: rustup component add --toolchain nightly rustfmt clippy
      - name: Format check
        run: cargo +nightly fmt -p jinhsi-core
      - name: Build
        run: cargo +nightly build -p jinhsi-core --verbose --target ${{matrix.target}}
      - name: Clippy
        run: cargo +nightly clippy -p jinhsi-core --verbose --target ${{matrix.target}}
      - name: Run tests
        env:
          GACHA_TEST_URL: ${{secrets.GACHA_TEST_URL}}
        run: cargo +nightly test -p jinhsi-core  --verbose --target ${{matrix.target}}
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: cargo llvm-cov --all-features -p jinhsi-core  --lcov --output-path lcov.info
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: JinhsiStudio/JinhsiStudio
